{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/FIlter/Filter.module.css","components/ContactForm/ContactForm.js","components/FIlter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css","App.module.css"],"names":["module","exports","ContactForm","props","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","resetForm","onSubmit","preventDefault","htmlFor","className","s","formInput","id","type","pattern","title","required","onChange","Filter","inputId","label","input","ContactList","contacts","onDeleteContact","contactList","map","item","text","onClick","initialState","App","JSON","parse","window","localStorage","getItem","setContacts","filterData","setFilterData","useEffect","setItem","stringify","container","length","contact","find","toLowerCase","alert","prevState","filter","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed994517.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"ContactForm_formInput__3aR2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__6YoRx\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\nimport shortid from \"shortid\";\n\nexport default function ContactForm(props) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        return setName(value);\n      case \"number\":\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onSubmit(name, number);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId}>\n        Name{\" \"}\n        <input\n          className={s.formInput}\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label htmlFor={numberInputId}>\n        Number{\" \"}\n        <input\n          className={s.formInput}\n          id={numberInputId}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter({ value, onChange }) {\n  const inputId = shortid.generate();\n  //  replace(/ /g, '')\n  return (\n    <label className={s.label} htmlFor={inputId}>\n      Find contact by name/number\n      <input\n        className={s.input}\n        id={inputId}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.contactList}>\n    {contacts.map(({ name, number, id }) => (\n      <li key={id} className={s.item}>\n        <span className={s.text}>{name}</span>\n        <span className={s.text}>{number}</span>\n        <button type=\"button\" onClick={() => onDeleteContact(id)}>\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport { ContactList };\n","import { useState, useEffect } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport { Filter } from \"./components/FIlter/Filter\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport s from \"./App.module.css\";\nimport shortid from \"shortid\";\n\nconst initialState = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem(\"contacts\")) ?? initialState\n  );\n  const [filterData, setFilterData] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name: name,\n      number: number,\n    };\n\n    contacts.find(\n      (contact) =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number\n    )\n      ? alert(`${contact.name} witn ${contact.number} is already in Contacts`)\n      : setContacts((prevState) => [...prevState, contact]);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  const changeFilter = (e) => {\n    setFilterData(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(filterData.toLowerCase()) ||\n        contact.number.includes(filterData)\n    );\n  };\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <span> Total contacts: {contacts.length}</span>\n\n      <ContactForm onSubmit={addContact} />\n\n      <h2 className={s.title}>Contacts</h2>\n\n      <Filter value={filterData} onChange={changeFilter} />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1QZtk\",\"text\":\"ContactList_text__3eYKT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3UoaN\",\"title\":\"App_title__1TgP6\"};"],"sourceRoot":""}